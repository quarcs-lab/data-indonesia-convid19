theme_minimal() +
labs(subtitle = "",
x = "Province",
y = "GDP growth in Q2-2020 (%, yoy)", color="grey") +
theme(text=element_text( family="Palatino")) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
data %>% mutate(gdp_col = gdp_q2_yoy >= 0) %>%
ggplot(data, aes(reorder(province, -gdp_q2_yoy, sum), gdp_q2_yoy, fill = gdp_col)) +
geom_col() + coord_flip() +
theme_minimal() +
labs(subtitle = "",
x = "Province",
y = "GDP growth in Q2-2020 (%, yoy)", color="grey") +
theme(text=element_text( family="Palatino")) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
data %>% mutate(gdp_col = gdp_q2_yoy >= 0) %>%
ggplot(data, aes(reorder(province, -gdp_q2_yoy, sum), gdp_q2_yoy, fill = gdp_col)) +
geom_col() + coord_flip()
data %>% mutate(gdp_col = gdp_q2_yoy >= 0) %>%
ggplot(data, aes(reorder(province, -gdp_q2_yoy, sum), gdp_q2_yoy)) +
geom_col() + coord_flip() +
theme_minimal() +
labs(subtitle = "",
x = "Province",
y = "GDP growth in Q2-2020 (%, yoy)", color="grey") +
theme(text=element_text( family="Palatino")) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
data %>%
ggplot(data, aes(reorder(province, -gdp_q2_yoy, sum), gdp_q2_yoy)) +
geom_col() + coord_flip() +
theme_minimal() +
labs(subtitle = "",
x = "Province",
y = "GDP growth in Q2-2020 (%, yoy)", color="grey") +
theme(text=element_text( family="Palatino")) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
a <- data %>% mutate(gdp_col = gdp_q2_yoy >= 0) %>%
ggplot(a, aes(reorder(province, -gdp_q2_yoy, sum), gdp_q2_yoy)) +
geom_col() + coord_flip() +
theme_minimal() +
labs(subtitle = "",
x = "Province",
y = "GDP growth in Q2-2020 (%, yoy)", color="grey") +
theme(text=element_text( family="Palatino")) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
a <- data %>% mutate(gdp_col = gdp_q2_yoy >= 0)
ggplot(a, aes(reorder(province, -gdp_q2_yoy, sum), gdp_q2_yoy)) +
geom_col() + coord_flip() +
theme_minimal() +
labs(subtitle = "",
x = "Province",
y = "GDP growth in Q2-2020 (%, yoy)", color="grey") +
theme(text=element_text( family="Palatino")) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
guides(col = guide_legend(nrow = 8))
#ggsave("gdp_q2.png", width = 9, height = 5)
a <- data %>% mutate(gdp_col = gdp_q2_yoy >= 0)
ggplot(a, aes(reorder(province, -gdp_q2_yoy, sum), gdp_q2_yoy, fill = gdp_col)) +
geom_col() + coord_flip() +
theme_minimal() +
labs(subtitle = "",
x = "Province",
y = "GDP growth in Q2-2020 (%, yoy)", color="grey") +
theme(text=element_text( family="Palatino")) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
guides(col = guide_legend(nrow = 8))
#ggsave("gdp_q2.png", width = 9, height = 5)
a <- data %>% mutate(gdp_col = ifelse(gdp_q2_yoy < 0, "red", "green")
ggplot(a, aes(reorder(province, -gdp_q2_yoy, sum), gdp_q2_yoy, fill = gdp_col)) +
a <- data %>% mutate(gdp_col = ifelse(gdp_q2_yoy < 0, "red", "green"))
ggplot(a, aes(reorder(province, -gdp_q2_yoy, sum), gdp_q2_yoy, fill = gdp_col)) +
geom_col() + coord_flip() +
theme_minimal() +
labs(subtitle = "",
x = "Province",
y = "GDP growth in Q2-2020 (%, yoy)", color="grey") +
theme(text=element_text( family="Palatino")) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
guides(col = guide_legend(nrow = 8))
#ggsave("gdp_q2.png", width = 9, height = 5)
a <- data %>% mutate(gdp_col = ifelse(gdp_q2_yoy < 0, "red", "green"))
ggplot(a, aes(reorder(province, -gdp_q2_yoy, sum), gdp_q2_yoy, fill = gdp_col)) +
geom_col() + coord_flip() +   scale_fill_identity(guide = FALSE) +
theme_minimal() +
labs(subtitle = "",
x = "Province",
y = "GDP growth in Q2-2020 (%, yoy)", color="grey") +
theme(text=element_text( family="Palatino")) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
guides(col = guide_legend(nrow = 8))
#ggsave("gdp_q2.png", width = 9, height = 5)
a <- data %>% mutate(gdp_col = ifelse(gdp_q2_yoy < 0, "red", "green"))
ggplot(a, aes(reorder(province, -gdp_q2_yoy, sum), gdp_q2_yoy, fill = gdp_col)) +
geom_col() + coord_flip() +   scale_fill_identity(guide = FALSE) +
theme_minimal() +
labs(subtitle = "",
x = "Province",
y = "GDP growth in Q2-2020 (%, yoy)", color="grey") +
theme(text=element_text( family="Palatino")) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
guides(col = guide_legend(nrow = 8))
ggsave("gdp_q2.png", width = 9, height = 5)
# Provide correlation matrix
corr <- cor(data[,c(13,15,22,23,25)])
round(corr, 2)
# Provide correlation matrix
corr <- cor(data[,c(13,15,22,23,25)])
round(corr, 2)
# Visualize correlation matrix
corrplot(corr, type = "upper", order = "hclust",
tl.col = "black", tl.srt = 45)
# Visualize correlation matrix
library(corrplot)
corrplot(corr, type = "upper", order = "hclust",
tl.col = "black", tl.srt = 45)
library(Hmisc)
res2<-rcorr(as.matrix(data[,c(13,15,22,23,25)]))
flattenCorrMatrix(res2$r, res2$P)
install.packages("Hmisc")
library(Hmisc)
res2<-rcorr(as.matrix(data[,c(13,15,22,23,25)]))
flattenCorrMatrix(res2$r, res2$P)
install.packages("Hmisc")
install.packages("Hmisc")
library(Hmisc)
res2<-rcorr(as.matrix(data[,c(13,15,22,23,25)]))
flattenCorrMatrix(res2$r, res2$P)
flattenCorrMatrix <- function(cormat, pmat) {
ut <- upper.tri(cormat)
data.frame(
row = rownames(cormat)[row(cormat)[ut]],
column = rownames(cormat)[col(cormat)[ut]],
cor  =(cormat)[ut],
p = pmat[ut]
)
}
library(Hmisc)
res2<-rcorr(as.matrix(data[,c(13,15,22,23,25)]))
flattenCorrMatrix(res2$r, res2$P)
# Visualize correlation matrix
library(corrplot)
corrplot(res2$r, type="upper", order="hclust",
p.mat = res2$P, sig.level = 0.01, insig = "blank")
library(Hmisc)
res2<-rcorr(as.matrix(data[,c(15,22,23,25)]))
flattenCorrMatrix(res2$r, res2$P)
# Visualize correlation matrix
library(corrplot)
corrplot(res2$r, type="upper", order="hclust",
p.mat = res2$P, sig.level = 0.01, insig = "blank")
mobility <- ggplot(data, aes(reorder(province, -mob_all, sum), mob_all)) +
geom_col() + coord_flip() +
theme_minimal() +
labs(subtitle = "",
x = "Province",
y = "Change in number of cases (in 100.000 population)", color="grey") +
theme(text=element_text( family="Palatino")) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
guides(col = guide_legend(nrow = 8))
case_rate
ggsave("case_change.png", width = 9, height = 5)
case_rate <- ggplot(data, aes(reorder(province, -rate_chg, sum), rate_chg)) +
geom_col() + coord_flip() +
theme_minimal() +
labs(subtitle = "",
x = "Province",
y = "Change in number of cases (in 100.000 population)", color="grey") +
theme(text=element_text( family="Palatino")) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
guides(col = guide_legend(nrow = 8))
case_rate
ggsave("case_change.png", width = 9, height = 5)
mobility <- ggplot(data, aes(reorder(province, -mob_all, sum), mob_all)) +
geom_col() + coord_flip() +
theme_minimal() +
labs(subtitle = "",
x = "Province",
y = "Change in number of cases (in 100.000 population)", color="grey") +
theme(text=element_text( family="Palatino")) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
guides(col = guide_legend(nrow = 8))
mobility
ggsave("mobility.png", width = 9, height = 5)
mobility <- ggplot(data, aes(reorder(province, -mob_all, sum), mob_all)) +
geom_col() + coord_flip() +
theme_minimal() +
labs(subtitle = "",
x = "Province",
y = "Change in people mobility relative to baseline", color="grey") +
theme(text=element_text( family="Palatino")) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
guides(col = guide_legend(nrow = 8))
mobility
ggsave("mobility.png", width = 9, height = 5)
job_loss <- ggplot(data, aes(reorder(province, -job_loss, sum), job_loss)) +
geom_col() + coord_flip() +
theme_minimal() +
labs(subtitle = "",
x = "Province",
y = "Number of people who loss their job", color="grey") +
theme(text=element_text( family="Palatino")) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
guides(col = guide_legend(nrow = 8))
job_loss
ggsave("job_loss.png", width = 9, height = 5)
# Provide correlation matrix
corr <- cor(data[,c(13,15,22,23,25)])
round(corr, 2)
library(Hmisc)
res2<-rcorr(as.matrix(data[,c(15,22,23,25)]))
flattenCorrMatrix(res2$r, res2$P)
# Visualize correlation matrix
library(corrplot)
corrplot(res2$r, type="upper", order="hclust",
p.mat = res2$P, sig.level = 0.01, insig = "blank")
corr_df <- data %>%
select([,c(13,15,22,23,25)])
corr_df <- data %>%
select(,c(13,15,22,23,25))
corr_df <- select(data,[c(13,15,22,23,25)])
corr_df <- select(data,[,c(13,15,22,23,25)])
corr_df <- select(data,[,c(13,15,22,23,25)])
corr_df <- select(data[,c(13,15,22,23,25)])
corr_df <- select(data[,c(13,15,22,23,25)])
library(tidyr)
corr_df <- select(data[,c(13,15,22,23,25)])
select(data[,c(13,15,22,23,25)])
corr_df <- subset(data, select = c(13, 15, 22, 23, 25))
View(corr)
df1 <- subset(data, select = c(13, 15, 22, 23, 25))
View(df_definitions)
View(df1)
df1 <- subset(data, select = c(2, 13, 15, 22, 23, 25))
df1 <- subset(data, select = c(2, 13, 15, 22, 23, 25)) %>%
colnames("Province", "Case change", "Job loss", "People mobility", "TAS share in GDP", "GDPg Q2-2020")
df1 <- subset(data, select = c(2, 13, 15, 22, 23, 25))
colnames(df1) <- c("Province", "Case change", "Job loss", "People mobility", "TAS share in GDP", "GDPg Q2-2020")
# Provide correlation matrix
corr <- cor(df1)
# Provide correlation matrix
corr <- cor(df1[,c(2:6)])
round(corr, 2)
library(Hmisc)
res2<-rcorr(as.matrix(df1[,c(2:6)]))
flattenCorrMatrix(res2$r, res2$P)
# Visualize correlation matrix
library(corrplot)
corrplot(res2$r, type="upper", order="hclust",
p.mat = res2$P, sig.level = 0.01, insig = "blank")
# Visualize correlation matrix
library(corrplot)
corrplot(res2$r, type="upper", order="hclust",
p.mat = res2$P, sig.level = 0.01, insig = "blank")
ggsave("coor.png"")
# Visualize correlation matrix
library(corrplot)
corrplot(res2$r, type="upper", order="hclust",
p.mat = res2$P, sig.level = 0.01, insig = "blank")
ggsave("coor.png")
# Visualize correlation matrix
library(corrplot)
corrplot(res2$r, type="upper", order="hclust",
p.mat = res2$P, sig.level = 0.01, insig = "blank")
dev.copy(jpeg,filename="corr.png");
dev.off ();
# Provide correlation matrix
corr <- cor(df1[,c(3:6)])
round(corr, 2)
library(Hmisc)
res2<-rcorr(as.matrix(df1[,c(3:6)]))
flattenCorrMatrix(res2$r, res2$P)
# Visualize correlation matrix
library(corrplot)
corrplot(res2$r, type="upper", order="hclust",
p.mat = res2$P, sig.level = 0.01, insig = "blank")
dev.copy(jpeg,filename="corr.png");
dev.off ();
knitr::opts_chunk$set(echo = TRUE, warning=FALSE)
library(tidyverse)  # Modern data science workflow
library(sf)         # Simple features for R
library(tmap)       # Thematic Maps
library(tmaptools)  # Thematic Maps Tools
library(RColorBrewer) # ColorBrewer Palettes
library(leaflet)    # Interactive web maps
library(rgdal)      # Bindings for the Geospatial Data Abstraction Library
library(rgeos)      # Interface to Geometry Engine - Open Source
# Change the presentation of decimal numbers to 4 and avoid scientific notation
options(prompt="R> ", digits=4, scipen=999)
library(readxl)
data <- read_excel("explore expandr.xlsx",
sheet = "Sheet1")
View(data)
df <- data %>% select(-c(4:7,9:12))
library(readr)
df_definitions <- read_delim("df_def.csv", ";", escape_double = FALSE,
trim_ws = TRUE)
df_definitions
map <- read_sf("province border.shp")
covid_map <- inner_join(
df,
map,
by = "ID"
)
covid_map
covid_map1 <- st_as_sf(covid_map)
case_rate <- ggplot(data, aes(reorder(province, -rate_chg, sum), rate_chg)) +
geom_col() + coord_flip() +
theme_minimal() +
labs(subtitle = "",
x = "Province",
y = "Change in number of cases (in 100.000 population)", color="grey") +
theme(text=element_text( family="Palatino")) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
guides(col = guide_legend(nrow = 8))
case_rate
ggsave("case_change.png", width = 9, height = 5)
a <- data %>% mutate(gdp_col = ifelse(gdp_q2_yoy < 0, "red", "green"))
ggplot(a, aes(reorder(province, -gdp_q2_yoy, sum), gdp_q2_yoy, fill = gdp_col)) +
geom_col() + coord_flip() +   scale_fill_identity(guide = FALSE) +
theme_minimal() +
labs(subtitle = "",
x = "Province",
y = "GDP growth in Q2-2020 (%, yoy)", color="grey") +
theme(text=element_text( family="Palatino")) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
guides(col = guide_legend(nrow = 8))
ggsave("gdp_q2.png", width = 9, height = 5)
mobility <- ggplot(data, aes(reorder(province, -mob_all, sum), mob_all)) +
geom_col() + coord_flip() +
theme_minimal() +
labs(subtitle = "",
x = "Province",
y = "Change in people mobility relative to baseline", color="grey") +
theme(text=element_text( family="Palatino")) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
guides(col = guide_legend(nrow = 8))
mobility
ggsave("mobility.png", width = 9, height = 5)
job_loss <- ggplot(data, aes(reorder(province, -job_loss, sum), job_loss)) +
geom_col() + coord_flip() +
theme_minimal() +
labs(subtitle = "",
x = "Province",
y = "Number of people who loss their job", color="grey") +
theme(text=element_text( family="Palatino")) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
guides(col = guide_legend(nrow = 8))
job_loss
ggsave("job_loss.png", width = 9, height = 5)
df1 <- subset(data, select = c(2, 13, 15, 22, 23, 25))
colnames(df1) <- c("Province", "Case change", "Job loss", "People mobility", "TAS share in GDP", "GDPg Q2-2020")
# Provide correlation matrix
corr <- cor(df1[,c(3:6)])
round(corr, 2)
flattenCorrMatrix <- function(cormat, pmat) {
ut <- upper.tri(cormat)
data.frame(
row = rownames(cormat)[row(cormat)[ut]],
column = rownames(cormat)[col(cormat)[ut]],
cor  =(cormat)[ut],
p = pmat[ut]
)
}
library(Hmisc)
res2<-rcorr(as.matrix(df1[,c(3:6)]))
flattenCorrMatrix(res2$r, res2$P)
# Visualize correlation matrix
library(corrplot)
corrplot(res2$r, type="upper", order="hclust",
p.mat = res2$P, sig.level = 0.01, insig = "blank")
dev.copy(jpeg,filename="corr.png");
dev.off ();
# Provide correlation matrix
corr <- cor(df1[,c(2:6)])
round(corr, 2)
library(Hmisc)
res2<-rcorr(as.matrix(df1[,c(2:6)]))
flattenCorrMatrix(res2$r, res2$P)
# Visualize correlation matrix
library(corrplot)
corrplot(res2$r, type="upper", order="hclust",
p.mat = res2$P, sig.level = 0.01, insig = "blank")
dev.copy(jpeg,filename="corr.png");
dev.off ();
# Visualize correlation matrix
library(corrplot)
corrplot(res2$r, type="upper", order="hclust",
p.mat = res2$P, sig.level = 0.05, insig = "blank")
dev.copy(jpeg,filename="corr.png");
dev.off ();
corrplot(res2$r, type="upper", order="hclust",
p.mat = res2$P, sig.level = 0.05, insig = "")
# Visualize correlation matrix
library(corrplot)
corrplot(res2$r, type="upper", order="hclust",
p.mat = res2$P, sig.level = 0.05, insig = "")
# Visualize correlation matrix
library(corrplot)
corrplot(res2$r, type="upper", order="hclust",
p.mat = res2$P, sig.level = 0.05, insig = "")
# Visualize correlation matrix
library(corrplot)
corrplot(res2$r, type="upper", order="hclust",
p.mat = res2$P, sig.level = 0.05, insig = "pch")
dev.copy(jpeg,filename="corr.png");
dev.off ();
# Visualize correlation matrix
library(corrplot)
corrplot(res2$r, type="upper", order="hclust",
p.mat = res2$P, sig.level = 0.05, insig = "")
# Visualize correlation matrix
library(corrplot)
corrplot(res2$r, type="upper", order="hclust",
p.mat = res2$P, sig.level = 0.05, insig = "p=value")
# Visualize correlation matrix
library(corrplot)
corrplot(res2$r, type="upper", order="hclust",
p.mat = res2$P, sig.level = 0.05, insig = "p-value")
dev.copy(jpeg,filename="corr.png");
dev.off ();
# Visualize correlation matrix
library(corrplot)
corrplot(res2$r, type="upper", order="hclust",
p.mat = res2$P, sig.level = 0.05, insig = "")
# Visualize correlation matrix
library(corrplot)
corrplot(res2$r, type="upper", order="hclust",
p.mat = res2$P, sig.level = 0.05, insig = "label-sig")
# Visualize correlation matrix
library(corrplot)
corrplot(res2$r, type="upper", order="hclust",
p.mat = res2$P, sig.level = 0.05, insig = "label_sig")
dev.copy(jpeg,filename="corr.png");
dev.off ();
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
finalis <- read_excel("finalis.xlsx")
View(finalis)
knitr::opts_chunk$set(echo = FALSE)
# Open libraries
library(tidyverse) # for modern data manipulation
library(ggplot2)  # for modern data visualization
library(plotrix)  # for modern data visualization
# Load the data
library(readxl)
finalis <- read_excel("finalis.xlsx")
View(finalis)
# Data manipulation
finalis <- finalis %>%
mutate(mile = NIP > 14000) %>%
mutate(lokasi = ifelse(grepl("KPw", SATKER), "KPw", "Pusat")) %>%
mutate(title = ifelse(grepl("Digital", JUDUL), "DIGITAL", "NO DIGITAL"))
#Show Satkers...
pie1 <- c(nrow(finalis[finalis$lokasi == "KPw",]), nrow(finalis[finalis$lokasi == "Pusat",]))
lbls <- c("KPw", "Pusat")
pct <- round(pie1/sum(pie1)*100)
lbls <- paste(lbls, pct)
lbls <- paste(lbls,"%",sep="")
pie3D(pie1, labels = lbls, explode = 0.2, labelcex=0.8, theta=1,radius =1.5,start=0.1, main="Finalists based on Satker")
#How many finalists are millennials?
pie <- c(nrow(finalis[finalis$mile == "TRUE",]), nrow(finalis[finalis$mile == "FALSE",]))
lbls <- c("Millennials", "Non-millennials")
pct <- round(pie/sum(pie)*100)
lbls <- paste(lbls, pct)
lbls <- paste(lbls,"%",sep="")
pie3D(pie, labels = lbls, explode = 0.2, labelcex=0.8, theta=1,radius =1.5,start=0.1, main="How many finalists are millennials?")
#How many finalists are millennials based on Satkers?
ggplot(finalis, aes(x=lokasi, fill = mile)) +
geom_bar() +
geom_text(stat="count", aes(label=..count..), position = position_stack(vjust = .5), color = "white") +
scale_color_manual(values = c("darkred", "darkblue"))+
scale_fill_manual(values = c("darkred", "darkblue")) +
xlab("Lokasi Satker") + ylab("Jumlah")
#How many titles contain the word DIGITAL?
ggplot(finalis, aes(x=title, fill = mile)) +
geom_bar() +
geom_text(stat="count", aes(label=..count..), position = position_stack(vjust = .5), color = "white") +
scale_color_manual(values = c("darkgreen", "darkred"))+
scale_fill_manual(values = c("darkgreen", "darkred")) +
xlab("Judul") + ylab("Jumlah")
#How many titles contain the word DIGITAL based on Satker?
ggplot(finalis, aes(x=title, fill = lokasi)) +
geom_bar() +
geom_text(stat="count", aes(label=..count..), position = position_stack(vjust = .5), color = "white") +
scale_color_manual(values = c("darkgreen", "darkblue"))+
scale_fill_manual(values = c("darkgreen", "darkblue")) +
xlab("Judul") + ylab("Jumlah")
# Data manipulation
finalis <- finalis %>%
mutate(mile = NIP > 14000) %>%
mutate(lokasi = ifelse(grepl("KPw", SATKER), "KPw", "Pusat")) %>%
mutate(title = ifelse(grepl("Digital", JUDUL), "DIGITAL", "NO DIGITAL"))
knit_with_parameters('D:/Mygithub/phd2023-harry-aginta-regional-inflation-indonesia/price convergence clubs/slides-template-master/index.Rmd')
