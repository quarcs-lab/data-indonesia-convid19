legend.position = c("left","bottom"))
tm_shape(covid_map1) +
tm_polygons(c("gdp_q2_yoy", "THS_share_gdp"), id = "province", palette=list("Reds", "Blues"), title=c("GDP growth Q2-2020 (yoy)", "THS share to GDP (%)")) +
tm_fill(style="kmeans")+
tm_layout(legend.title.size = 0.6,
legend.text.size = 0.5,
legend.position = c("left","bottom"))
knitr::opts_chunk$set(echo = TRUE, warning=FALSE)
library(tidyverse)  # Modern data science workflow
library(sf)         # Simple features for R
library(tmap)       # Thematic Maps
library(tmaptools)  # Thematic Maps Tools
library(RColorBrewer) # ColorBrewer Palettes
library(leaflet)    # Interactive web maps
library(rgdal)      # Bindings for the Geospatial Data Abstraction Library
library(rgeos)      # Interface to Geometry Engine - Open Source
# Change the presentation of decimal numbers to 4 and avoid scientific notation
options(prompt="R> ", digits=4, scipen=999)
library(readxl)
data <- read_excel("explore expandr.xlsx",
sheet = "Sheet1")
View(data)
df <- data %>% select(-c(4:7,9:12))
library(readr)
df_definitions <- read_delim("df_def.csv", ";", escape_double = FALSE,
trim_ws = TRUE)
df_definitions
map <- read_sf("province border.shp")
covid_map <- inner_join(
df,
map,
by = "ID"
)
covid_map
covid_map1 <- st_as_sf(covid_map)
tm_shape(covid_map1) +
tm_polygons(c("case_chg", "rate_chg"), id = "province", palette=list("Reds", "Greens"), title=c("Change in number of cumulative cases (Mar to Jun)", "Change in rate of cumulative cases (Mar to Jun)")) +
tm_fill(style="kmeans") +
tm_layout(legend.title.size = 0.6,
legend.text.size = 0.5,
legend.position = c("left","bottom"))
tm_shape(covid_map1) +
tm_polygons(c("job_loss", "mob_work"), id = "province", palette=list("Blues", "Reds"), title=c("Number of jobs affected", "Mobility to work compared to baseline")) +
tm_fill(style="kmeans") +
tm_layout(legend.title.size = 0.5,
legend.text.size = 0.4,
legend.position = c("left","bottom"))
tm_shape(covid_map1) +
tm_polygons(c("gdp_q2_yoy", "gdp_q2_qtq"), id = "province", palette=list("Reds", "Blues"), title=c("GDP growth Q2-2020 (yoy)", "GDP growth Q2-2020 (qtq)")) +
tm_fill(style="kmeans") +
tm_layout(legend.title.size = 0.6,
legend.text.size = 0.5,
legend.position = c("left","bottom"))
tm_shape(covid_map1) +
tm_polygons(c("gdp_q2_yoy", "THS_share_gdp"), id = "province", palette=list("Reds", "Blues"), title=c("GDP growth Q2-2020 (yoy)", "THS share to GDP (%)")) +
tm_fill(style="kmeans")+
tm_layout(legend.title.size = 0.6,
legend.text.size = 0.5,
legend.position = c("left","bottom"))
tmap_mode("view")
tm_shape(covid_map1) +
tm_fill("gdp_q2_yoy",
palette = "viridis",
id="province",
popup.vars=c("case_chg", "rate_chg", "job_loss", "mob_work", "gdp_q2_yoy", "gdp_q2_qtq")) +
tm_borders(alpha=.4) +
tm_legend(outside=TRUE) +
tm_layout(frame = FALSE)
tmap_mode("plot")
tmap_mode("plot")
tm_shape(covid_map1) +
tm_fill("gdp_q2_yoy",
palette = "viridis",
id="province",
popup.vars=c("case_chg", "rate_chg", "job_loss", "mob_work", "gdp_q2_yoy", "gdp_q2_qtq")) +
tm_borders(alpha=.4) +
tm_legend(outside=TRUE) +
tm_layout(frame = FALSE)
tmap_mode("view")
tm_shape(covid_map1) +
tm_fill("gdp_q2_yoy",
palette = "viridis",
id="province",
popup.vars=c("case_chg", "rate_chg", "job_loss", "mob_work", "gdp_q2_yoy", "gdp_q2_qtq")) +
tm_borders(alpha=.4) +
tm_legend(outside=TRUE) +
tm_layout(frame = FALSE)
knitr::opts_chunk$set(echo = TRUE, warning=FALSE)
library(tidyverse)  # Modern data science workflow
library(sf)         # Simple features for R
library(tmap)       # Thematic Maps
library(tmaptools)  # Thematic Maps Tools
library(RColorBrewer) # ColorBrewer Palettes
library(leaflet)    # Interactive web maps
library(rgdal)      # Bindings for the Geospatial Data Abstraction Library
library(rgeos)      # Interface to Geometry Engine - Open Source
# Change the presentation of decimal numbers to 4 and avoid scientific notation
options(prompt="R> ", digits=4, scipen=999)
library(readxl)
data <- read_excel("explore expandr.xlsx",
sheet = "Sheet1")
View(data)
df <- data %>% select(-c(4:7,9:12))
library(readr)
df_definitions <- read_delim("df_def.csv", ";", escape_double = FALSE,
trim_ws = TRUE)
df_definitions
map <- read_sf("province border.shp")
covid_map <- inner_join(
df,
map,
by = "ID"
)
covid_map
covid_map1 <- st_as_sf(covid_map)
tm_shape(covid_map1) +
tm_polygons(c("case_chg", "rate_chg"), id = "province", palette=list("Reds", "Greens"), title=c("Change in number of cumulative cases (Mar to Jun)", "Change in rate of cumulative cases (Mar to Jun)")) +
tm_fill(style="kmeans") +
tm_layout(legend.title.size = 0.6,
legend.text.size = 0.5,
legend.position = c("left","bottom"))
tm_shape(covid_map1) +
tm_polygons(c("job_loss", "mob_work"), id = "province", palette=list("Blues", "Reds"), title=c("Number of jobs affected", "Mobility to work compared to baseline")) +
tm_fill(style="kmeans") +
tm_layout(legend.title.size = 0.5,
legend.text.size = 0.4,
legend.position = c("left","bottom"))
tm_shape(covid_map1) +
tm_polygons(c("gdp_q2_yoy", "gdp_q2_qtq"), id = "province", palette=list("Reds", "Blues"), title=c("GDP growth Q2-2020 (yoy)", "GDP growth Q2-2020 (qtq)")) +
tm_fill(style="kmeans") +
tm_layout(legend.title.size = 0.6,
legend.text.size = 0.5,
legend.position = c("left","bottom"))
tm_shape(covid_map1) +
tm_polygons(c("gdp_q2_yoy", "THS_share_gdp"), id = "province", palette=list("Reds", "Blues"), title=c("GDP growth Q2-2020 (yoy)", "THS share to GDP (%)")) +
tm_fill(style="kmeans")+
tm_layout(legend.title.size = 0.6,
legend.text.size = 0.5,
legend.position = c("left","bottom"))
knitr::opts_chunk$set(echo = TRUE, warning=FALSE)
library(tidyverse)  # Modern data science workflow
library(sf)         # Simple features for R
library(tmap)       # Thematic Maps
library(tmaptools)  # Thematic Maps Tools
library(RColorBrewer) # ColorBrewer Palettes
library(leaflet)    # Interactive web maps
library(rgdal)      # Bindings for the Geospatial Data Abstraction Library
library(rgeos)      # Interface to Geometry Engine - Open Source
# Change the presentation of decimal numbers to 4 and avoid scientific notation
options(prompt="R> ", digits=4, scipen=999)
knitr::opts_chunk$set(echo = TRUE, warning=FALSE)
library(tidyverse)  # Modern data science workflow
library(sf)         # Simple features for R
library(tmap)       # Thematic Maps
library(tmaptools)  # Thematic Maps Tools
library(RColorBrewer) # ColorBrewer Palettes
library(leaflet)    # Interactive web maps
library(rgdal)      # Bindings for the Geospatial Data Abstraction Library
library(rgeos)      # Interface to Geometry Engine - Open Source
# Change the presentation of decimal numbers to 4 and avoid scientific notation
options(prompt="R> ", digits=4, scipen=999)
library(readxl)
data <- read_excel("explore expandr.xlsx",
sheet = "Sheet1")
View(data)
df <- data %>% select(-c(4:7,9:12))
map <- read_sf("province border.shp")
covid_map <- inner_join(
df,
map,
by = "ID"
)
covid_map1 <- st_as_sf(covid_map)
tm_shape(covid_map1) +
tm_polygons(c("case_chg", "rate_chg"), id = "province", palette=list("Reds", "Greens"), title=c("Change in number of cumulative cases (Mar to Jun)", "Change in rate of cumulative cases (Mar to Jun)")) +
tm_fill(style="kmeans") +
tm_layout(legend.title.size = 0.6,
legend.text.size = 0.5,
legend.position = c("left","bottom"))
tm_shape(covid_map1) +
tm_polygons(c("job_loss", "mob_work"), id = "province", palette=list("Blues", "Reds"), title=c("Number of jobs affected", "Mobility to work compared to baseline")) +
tm_fill(style="kmeans") +
tm_layout(legend.title.size = 0.5,
legend.text.size = 0.4,
legend.position = c("left","bottom"))
tm_shape(covid_map1) +
tm_polygons(c("gdp_q2_yoy", "gdp_q2_qtq"), id = "province", palette=list("Reds", "Blues"), title=c("GDP growth Q2-2020 (yoy)", "GDP growth Q2-2020 (qtq)")) +
tm_fill(style="kmeans") +
tm_layout(legend.title.size = 0.6,
legend.text.size = 0.5,
legend.position = c("left","bottom"))
tm_shape(covid_map1) +
tm_polygons(c("gdp_q2_yoy", "THS_share_gdp"), id = "province", palette=list("Reds", "Blues"), title=c("GDP growth Q2-2020 (yoy)", "THS share to GDP (%)")) +
tm_fill(style="kmeans")+
tm_layout(legend.title.size = 0.6,
legend.text.size = 0.5,
legend.position = c("left","bottom"))
tmap_mode("view")
tm_shape(covid_map1) +
tm_fill("gdp_q2_yoy",
palette = "viridis",
id="province",
popup.vars=c("case_chg", "rate_chg", "job_loss", "mob_work", "gdp_q2_yoy", "gdp_q2_qtq")) +
tm_borders(alpha=.4) +
tm_legend(outside=TRUE) +
tm_layout(frame = FALSE)
tmap_mode("plot")
knitr::opts_chunk$set(echo = TRUE, warning=FALSE)
library(tidyverse)  # Modern data science workflow
library(sf)         # Simple features for R
library(tmap)       # Thematic Maps
library(tmaptools)  # Thematic Maps Tools
library(RColorBrewer) # ColorBrewer Palettes
library(leaflet)    # Interactive web maps
library(rgdal)      # Bindings for the Geospatial Data Abstraction Library
library(rgeos)      # Interface to Geometry Engine - Open Source
# Change the presentation of decimal numbers to 4 and avoid scientific notation
options(prompt="R> ", digits=4, scipen=999)
library(readxl)
data <- read_excel("explore expandr.xlsx",
sheet = "Sheet1")
View(data)
df <- data %>% select(-c(4:7,9:12))
library(readr)
df_definitions <- read_delim("df_def.csv", ";", escape_double = FALSE,
trim_ws = TRUE)
df_definitions
map <- read_sf("province border.shp")
covid_map <- inner_join(
df,
map,
by = "ID"
)
covid_map
covid_map1 <- st_as_sf(covid_map)
tm_shape(covid_map1) +
tm_polygons(c("case_chg", "rate_chg"), id = "province", palette=list("Reds", "Greens"), title=c("Change in number of cumulative cases (Mar to Jun)", "Change in rate of cumulative cases (Mar to Jun)")) +
tm_fill(style="kmeans") +
tm_layout(legend.title.size = 0.6,
legend.text.size = 0.5,
legend.position = c("left","bottom"))
tm_shape(covid_map1) +
tm_polygons(c("job_loss", "mob_work"), id = "province", palette=list("Blues", "Reds"), title=c("Number of jobs affected", "Mobility to work compared to baseline")) +
tm_fill(style="kmeans") +
tm_layout(legend.title.size = 0.5,
legend.text.size = 0.4,
legend.position = c("left","bottom"))
tm_shape(covid_map1) +
tm_polygons(c("gdp_q2_yoy", "gdp_q2_qtq"), id = "province", palette=list("Reds", "Blues"), title=c("GDP growth Q2-2020 (yoy)", "GDP growth Q2-2020 (qtq)")) +
tm_fill(style="kmeans") +
tm_layout(legend.title.size = 0.6,
legend.text.size = 0.5,
legend.position = c("left","bottom"))
tm_shape(covid_map1) +
tm_polygons(c("gdp_q2_yoy", "THS_share_gdp"), id = "province", palette=list("Reds", "Blues"), title=c("GDP growth Q2-2020 (yoy)", "THS share to GDP (%)")) +
tm_fill(style="kmeans")+
tm_layout(legend.title.size = 0.6,
legend.text.size = 0.5,
legend.position = c("left","bottom"))
tmap_mode("view")
tm_shape(covid_map1) +
tm_fill("gdp_q2_yoy",
palette = "viridis",
id="province",
popup.vars=c("case_chg", "rate_chg", "job_loss", "mob_work", "gdp_q2_yoy", "gdp_q2_qtq")) +
tm_borders(alpha=.4) +
tm_legend(outside=TRUE) +
tm_layout(frame = FALSE)
tmap_mode("plot")
tmap_mode("view")
tm_shape(covid_map1) +
tm_fill("gdp_q2_yoy",
palette = "viridis",
id="province",
popup.vars=c("case_chg", "rate_chg", "job_loss", "mob_work", "gdp_q2_yoy", "gdp_q2_qtq")) +
tm_borders(alpha=.4) +
tm_legend(outside=TRUE) +
tm_layout(frame = FALSE)
tmap_mode("plot")
tm_shape(covid_map1) +
tm_polygons(c("case_chg", "rate_chg"), id = "province", palette=list("Reds", "Greens"), title=c("Change in number of cumulative cases (Mar to Jun)", "Change in rate of cumulative cases (Mar to Jun)")) +
tm_fill(style="kmeans") +
tm_layout(legend.title.size = 0.6,
legend.text.size = 0.5,
legend.position = c("left","bottom"))
tm_shape(covid_map1) +
tm_polygons(c("job_loss", "mob_work"), id = "province", palette=list("Blues", "Reds"), title=c("Number of jobs affected", "Mobility to work compared to baseline")) +
tm_fill(style="kmeans") +
tm_layout(legend.title.size = 0.5,
legend.text.size = 0.4,
legend.position = c("left","bottom"))
tm_shape(covid_map1) +
tm_polygons(c("gdp_q2_yoy", "gdp_q2_qtq"), id = "province", palette=list("Reds", "Blues"), title=c("GDP growth Q2-2020 (yoy)", "GDP growth Q2-2020 (qtq)")) +
tm_fill(style="kmeans") +
tm_layout(legend.title.size = 0.6,
legend.text.size = 0.5,
legend.position = c("left","bottom"))
tm_shape(covid_map1) +
tm_polygons(c("gdp_q2_yoy", "THS_share_gdp"), id = "province", palette=list("Reds", "Blues"), title=c("GDP growth Q2-2020 (yoy)", "THS share to GDP (%)")) +
tm_fill(style="kmeans")+
tm_layout(legend.title.size = 0.6,
legend.text.size = 0.5,
legend.position = c("left","bottom"))
tmap_mode("view")
tm_shape(covid_map1) +
tm_fill("gdp_q2_yoy",
palette = "viridis",
id="province",
popup.vars=c("case_chg", "rate_chg", "job_loss", "mob_work", "gdp_q2_yoy", "gdp_q2_qtq")) +
tm_borders(alpha=.4) +
tm_legend(outside=TRUE) +
tm_layout(frame = FALSE)
tmap_mode("plot")
tm_shape(covid_map1) +
tm_fill("gdp_q2_yoy",
palette = "viridis",
id="province",
popup.vars=c("case_chg", "rate_chg", "job_loss", "mob_work", "gdp_q2_yoy", "gdp_q2_qtq")) +
tm_borders(alpha=.4) +
tm_legend(outside=TRUE) +
tm_layout(frame = FALSE)
tmap_mode("plot")
tmap_mode("view")
tm_shape(covid_map1) +
tm_fill("gdp_q2_yoy",
palette = "viridis",
id="province",
popup.vars=c("case_chg", "rate_chg", "job_loss", "mob_work", "gdp_q2_yoy", "gdp_q2_qtq")) +
tm_borders(alpha=.4) +
tm_legend(outside=TRUE) +
tm_layout(frame = FALSE)
tmap_mode("plot")
tmap_mode("view")
tm_shape(covid_map1) +
tm_fill("gdp_q2_yoy",
palette = "viridis",
id="province",
popup.vars=c("case_chg", "rate_chg", "job_loss", "mob_work", "gdp_q2_yoy", "gdp_q2_qtq")) +
tm_legend(outside=TRUE) +
tm_layout(frame = FALSE)
tmap_mode("plot")
knitr::opts_chunk$set(echo = TRUE, warning=FALSE)
library(tidyverse)  # Modern data science workflow
library(sf)         # Simple features for R
library(tmap)       # Thematic Maps
library(tmaptools)  # Thematic Maps Tools
library(RColorBrewer) # ColorBrewer Palettes
library(leaflet)    # Interactive web maps
library(rgdal)      # Bindings for the Geospatial Data Abstraction Library
library(rgeos)      # Interface to Geometry Engine - Open Source
# Change the presentation of decimal numbers to 4 and avoid scientific notation
options(prompt="R> ", digits=4, scipen=999)
library(readxl)
data <- read_excel("explore expandr.xlsx",
sheet = "Sheet1")
View(data)
df <- data %>% select(-c(4:7,9:12))
library(readr)
df_definitions <- read_delim("df_def.csv", ";", escape_double = FALSE,
trim_ws = TRUE)
df_definitions
map <- read_sf("province border.shp")
covid_map <- inner_join(
df,
map,
by = "ID"
)
covid_map
covid_map1 <- st_as_sf(covid_map)
tm_shape(covid_map1) +
tm_polygons(c("case_chg", "rate_chg"), id = "province", palette=list("Reds", "Greens"), title=c("Change in number of cumulative cases (Mar to Jun)", "Change in rate of cumulative cases (Mar to Jun)")) +
tm_fill(style="kmeans") +
tm_layout(legend.title.size = 0.6,
legend.text.size = 0.5,
legend.position = c("left","bottom"))
tm_shape(covid_map1) +
tm_polygons(c("job_loss", "mob_work"), id = "province", palette=list("Blues", "Reds"), title=c("Number of jobs affected", "Mobility to work compared to baseline")) +
tm_fill(style="kmeans") +
tm_layout(legend.title.size = 0.5,
legend.text.size = 0.4,
legend.position = c("left","bottom"))
tm_shape(covid_map1) +
tm_polygons(c("gdp_q2_yoy", "gdp_q2_qtq"), id = "province", palette=list("Reds", "Blues"), title=c("GDP growth Q2-2020 (yoy)", "GDP growth Q2-2020 (qtq)")) +
tm_fill(style="kmeans") +
tm_layout(legend.title.size = 0.6,
legend.text.size = 0.5,
legend.position = c("left","bottom"))
tm_shape(covid_map1) +
tm_polygons(c("gdp_q2_yoy", "THS_share_gdp"), id = "province", palette=list("Reds", "Blues"), title=c("GDP growth Q2-2020 (yoy)", "THS share to GDP (%)")) +
tm_fill(style="kmeans")+
tm_layout(legend.title.size = 0.6,
legend.text.size = 0.5,
legend.position = c("left","bottom"))
tmap_mode("view")
tm_shape(covid_map1) +
tm_fill("gdp_q2_yoy",
palette = "viridis",
id="province",
popup.vars=c("case_chg", "rate_chg", "job_loss", "mob_work", "gdp_q2_yoy", "gdp_q2_qtq")) +
tm_borders(alpha=.4) +
tm_legend(outside=TRUE) +
tm_layout(frame = FALSE)
tmap_mode("plot")
tmap_mode("plot")
tm_shape(covid_map1) +
tm_fill("gdp_q2_yoy",
palette = "viridis",
id="province",
popup.vars=c("case_chg", "rate_chg", "job_loss", "mob_work", "gdp_q2_yoy", "gdp_q2_qtq")) +
tm_borders(alpha=.4) +
tm_legend(outside=TRUE) +
tm_layout(frame = FALSE)
tmap_mode("plot")
tmap_mode("plot")
tm_shape(covid_map1) +
tm_fill("gdp_q2_yoy",
palette = "viridis",
id="province",
popup.vars=c("case_chg", "rate_chg", "job_loss", "mob_work", "gdp_q2_yoy", "gdp_q2_qtq")) +
tm_borders(alpha=.4) +
tm_legend(outside=TRUE) +
tm_layout(frame = FALSE)
suppressWarnings(suppressMessages({
library(knitr)
library(kableExtra)
library(htmltools)
library(tidyverse)
library(scales)
library(ExPanDaR)
}))
knitr::opts_chunk$set(fig.align = 'center')
create_sample <- function(df, df_def) {
# Set infinite numerical variables to NA
df[, df_def$var_name[df_def$type == "numeric"]] <-
lapply(df[, df_def$var_name[df_def$type == "numeric"]],
function(x) ifelse(is.finite(x), x, NA))
# Delete numerical variables that only contain NAs
all_na_vars <- sapply(df, function (x) all(is.na(x)))
df_def <- df_def[!all_na_vars,]
df <- df[, df_def$var_name]
# Drop observations that are NA in variables that are not allowed to
df <- df[complete.cases(df[, df_def$var_name[which(df_def$can_be_na == FALSE)]]), ]
df <- droplevels(df)
return(list(df = df, df_def = df_def))
}
load("ExPanD_nb_data.Rdata")
df <- smp
create_sample <- function(df, df_def) {
# Set infinite numerical variables to NA
df[, df_def$var_name[df_def$type == "numeric"]] <-
lapply(df[, df_def$var_name[df_def$type == "numeric"]],
function(x) ifelse(is.finite(x), x, NA))
# Delete numerical variables that only contain NAs
all_na_vars <- sapply(df, function (x) all(is.na(x)))
df_def <- df_def[!all_na_vars,]
df <- df[, df_def$var_name]
# Drop observations that are NA in variables that are not allowed to
df <- df[complete.cases(df[, df_def$var_name[which(df_def$can_be_na == FALSE)]]), ]
df <- droplevels(df)
return(list(df = df, df_def = df_def))
}
load("ExPanD_nb_data.Rdata")
create_sample <- function(df, df_def) {
# Set infinite numerical variables to NA
df[, df_def$var_name[df_def$type == "numeric"]] <-
lapply(df[, df_def$var_name[df_def$type == "numeric"]],
function(x) ifelse(is.finite(x), x, NA))
# Delete numerical variables that only contain NAs
all_na_vars <- sapply(df, function (x) all(is.na(x)))
df_def <- df_def[!all_na_vars,]
df <- df[, df_def$var_name]
# Drop observations that are NA in variables that are not allowed to
df <- df[complete.cases(df[, df_def$var_name[which(df_def$can_be_na == FALSE)]]), ]
df <- droplevels(df)
return(list(df = df, df_def = df_def))
}
load("ExPanD_nb_data.Rdata")
smp_list <- create_sample(nb_df, nb_df_def)
smp <- smp_list$df
smp_def <- smp_list$df_def
df <- smp
df$region <- as.factor(df$region)
df$province <- as.factor(df$province)
p <- ggplot(df, aes(x = region)) +
geom_bar(aes(fill= province), position = "stack") +
labs(x = "region", fill = "province")
p
df <- smp
t <- prepare_descriptive_table(smp)
t$kable_ret  %>%
kable_styling("condensed", full_width = F, position = "center")
var <- as.numeric(smp$gdp_q2_yoy)
hist(var, main="", xlab = "gdp_q2_yoy", col="red", right = FALSE, breaks= 30)
df <- smp
vars <- c("Prov", "ts_id", "case_chg", "province")
vars <- c("cs_id", "ts_id", "case_chg", "province")
df <- df[, vars]
df <- droplevels(df[complete.cases(df), ])
if (nrow(df) <= 10) {
cat("Not enough data to generate table")
} else {
tab <- prepare_ext_obs_table(df, var = "case_chg")
tab$kable_ret %>%
kable_styling()
}
df <- smp
prepare_by_group_bar_graph(df, "province", "rate_chg", mean, TRUE)$plot +
ylab("mean rate_chg")
View(smp)
df <- smp
prepare_by_group_bar_graph(df, "province", "rate_chg", mean, TRUE)$plot +
ylab(" rate_chg")
